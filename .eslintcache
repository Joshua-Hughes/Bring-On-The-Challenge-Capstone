[{"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\index.js":"1","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\reportWebVitals.js":"2","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Main.js":"3","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\applicationView.js":"4","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\auth\\login.js":"5","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\auth\\register.js":"6","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\searchPage\\GamesList.js":"7","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\searchPage\\GameCard.js":"8","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\Settings.js":"9","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\ApplicationView.js":"10","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GamesList.js":"11","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GameCard.js":"12","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GameDetails.js":"13","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Auth\\register.js":"14","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Auth\\login.js":"15","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GamesProvider.js":"16","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeProvider.js":"17","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeCard.js":"18","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeForm.js":"19","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\SavedChallengeProvider.js":"20","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\UserPage\\UserPage.js":"21","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\UserPage\\SavedChallengeCard.js":"22"},{"size":341,"mtime":1612192995541,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":716,"mtime":1612407704816,"results":"26","hashOfConfig":"24"},{"size":385,"mtime":1612287455347,"results":"27","hashOfConfig":"24"},{"size":2150,"mtime":1612300554670,"results":"28","hashOfConfig":"24"},{"size":3129,"mtime":1612300577396,"results":"29","hashOfConfig":"24"},{"size":1459,"mtime":1612374289304,"results":"30","hashOfConfig":"24"},{"size":443,"mtime":1612373785724,"results":"31","hashOfConfig":"24"},{"size":79,"mtime":1612215398110,"results":"32","hashOfConfig":"24"},{"size":1031,"mtime":1612906914351,"results":"33","hashOfConfig":"24"},{"size":1931,"mtime":1613754010671,"results":"34","hashOfConfig":"24"},{"size":512,"mtime":1612968356480,"results":"35","hashOfConfig":"24"},{"size":3722,"mtime":1613758333951,"results":"36","hashOfConfig":"24"},{"size":3356,"mtime":1612967381911,"results":"37","hashOfConfig":"24"},{"size":2334,"mtime":1613150985509,"results":"38","hashOfConfig":"24"},{"size":1773,"mtime":1613758191543,"results":"39","hashOfConfig":"24"},{"size":2192,"mtime":1613408263629,"results":"40","hashOfConfig":"24"},{"size":2507,"mtime":1613752664351,"results":"41","hashOfConfig":"24"},{"size":4351,"mtime":1613426807911,"results":"42","hashOfConfig":"24"},{"size":1425,"mtime":1613408289452,"results":"43","hashOfConfig":"24"},{"size":1310,"mtime":1613150985505,"results":"44","hashOfConfig":"24"},{"size":857,"mtime":1613150985504,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1mcyhk1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\index.js",[],["98","99"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\reportWebVitals.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Main.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\applicationView.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\auth\\login.js",[],["100","101"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\auth\\register.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\searchPage\\GamesList.js",["102","103"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\searchPage\\GameCard.js",["104"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\Settings.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\ApplicationView.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GamesList.js",["105","106"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GameCard.js",["107"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n//displays each game passed through with a link to a details page\r\nexport const GameCard = ({ game }) => {\r\n    return (\r\n        <section className=\"game\">\r\n            <h3 className=\"game__name\">\r\n                <Link to={`/game-${game.id}`}>\r\n                    {game.name}\r\n                </Link>\r\n            </h3>\r\n            <img src={game.background_image} width=\"200\" alt=\"No image available\"></img>\r\n        </section>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GameDetails.js",["108","109"],"import React, { useContext, useEffect, useState, useRef } from \"react\"\r\nimport { GameContext } from \"./GamesProvider\"\r\nimport { ChallengeContext } from \"../Challenges/ChallengeProvider\"\r\nimport { ChallengeCard } from \"../Challenges/ChallengeCard\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { ChallengeForm } from \"../Challenges/ChallengeForm\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const GameDetails = () => {\r\n\r\n    let newChallengeForm = useRef()\r\n\r\n    const { getGameById } = useContext(GameContext)\r\n\r\n    const { getChallenges, challenges } = useContext(ChallengeContext)\r\n\r\n    const [game, setGame] = useState({})\r\n\r\n    const { gameId } = useParams()\r\n\r\n    //fetches the information for the chosen game and the challenges\r\n    useEffect(() => {\r\n        getGameById(gameId)\r\n            .then((response) => {\r\n                setGame(response)\r\n                return getChallenges()\r\n            })\r\n    }, [])\r\n\r\n    //renders each existing platform\r\n    let gamePlatforms = game.platforms?.map((platform) =>\r\n        <li className=\"platform\" key={platform.platform?.id}> {platform.platform?.name}</li>)\r\n\r\n    //renders each existing developer company\r\n    let gameDevs = game.developers?.map((dev) =>\r\n        <li className=\"dev\" key={dev.id}> {dev.name}</li>)\r\n\r\n    //renders each existing game genre\r\n    let gameGenres = game.genres?.map((genre) =>\r\n        <li className=\"genre\" key={genre.id}> {genre.name}</li>)\r\n\r\n    //renders each existing tag\r\n    let gameTags = game.tags?.map((tag) =>\r\n        <li className=\"tag\" key={tag.id}> {tag.name}</li>)\r\n\r\n    //renders each existing game publisher\r\n    let gamePubs = game.publishers?.map((publisher) =>\r\n        <li className=\"publisher\" key={publisher.id}> {publisher.name}</li>)\r\n\r\n    //renders the information page for the chosen game\r\n    return (\r\n        <section className=\"game\">\r\n            <div class=\"links\">\r\n            <Link to=\"/games\">\r\n                Go back to the list!\r\n            </Link>\r\n            <Link to={`/userPage`}>\r\n                View saved challenges!\r\n            </Link>\r\n            </div>\r\n            <article className=\"game__information\">\r\n                <img src={game.background_image} width=\"500\" alt=\"No image available\"></img>\r\n                <h1 className=\"game__title\">{game.name}</h1>\r\n                <div className=\"game__description\" dangerouslySetInnerHTML={{ __html: game.description }} />\r\n                <ul className=\"game__platforms\"> Platforms:{gamePlatforms}</ul>\r\n                <div className=\"game__releaseDate\">Released: {game.released}</div>\r\n                <div className=\"game__rating\">Player Rating: {game.rating}</div>\r\n                <ul className=\"game__developers\">Developers: {gameDevs}</ul>\r\n                <ul className=\"game__genres\">Genres: {gameGenres}</ul>\r\n                <ul className=\"game__tags\">Tags: {gameTags}</ul>\r\n                <ul className=\"game__publishers\">Publishers: {gamePubs}</ul>\r\n            </article>\r\n            <h3 className=\"challenges__header\">Challenges</h3>\r\n            <article className=\"challenges\">\r\n                <dialog className=\"dialog--form\" ref={newChallengeForm}>\r\n                    <ChallengeForm />\r\n                    <button className=\"closeButton\" onClick={e => newChallengeForm.current.close()}>Close</button>\r\n                </dialog>\r\n                <button className=\"addChallenge\" onClick={e => newChallengeForm.current.showModal()}>Add Challenge</button>\r\n            </article>\r\n            {challenges.map((item) => {\r\n                return <ChallengeCard key={item.id} challenge={item} game={game} modal={newChallengeForm}/>\r\n            })}\r\n        </section>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Auth\\register.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Auth\\login.js",[],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\SearchPage\\GamesProvider.js",["110"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeProvider.js",["111"],"import React, { useState, createContext } from \"react\"\r\n\r\nexport const ChallengeContext = createContext()\r\n\r\nexport const ChallengeProvider = (props) => {\r\n    const [challenges, setChallenges] = useState([])\r\n    const [ratings, setRatings] = useState([])\r\n\r\n    //fetches all challenges\r\n    const getChallenges = () => {\r\n        return fetch(\"http://localhost:8088/challenges?_expand=rating&_expand=user\")\r\n            .then(response => response.json())\r\n            .then(setChallenges)\r\n    }\r\n\r\n    //fetches all ratings\r\n    const getRatings = () => {\r\n        return fetch(\"http://localhost:8088/ratings\")\r\n            .then(response => response.json())\r\n    }\r\n\r\n    //allows the addition of challenges\r\n    const addChallenge = challengeObj => {\r\n        return fetch(\"http://localhost:8088/challenges\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(challengeObj)\r\n        })\r\n        .then(getChallenges)\r\n    }\r\n\r\n    //fetches challenges based on id\r\n    const getChallengeById = (id) => {\r\n        return fetch(`http://localhost:8088/challenges/${id}`)\r\n            .then(response => response.json())\r\n    }\r\n\r\n    //allows the deleting of a specific challenge by id\r\n    const deleteChallenge = (challengeId) => {\r\n        return fetch(`http://localhost:8088/challenges/${challengeId}`, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(getChallenges)\r\n    }\r\n\r\n    //allows for editing a challenge\r\n    const updateChallenge = challenge => {\r\n        return fetch(`http://localhost:8088/challenges/${challenge.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(challenge)\r\n        })\r\n            .then(getChallenges)\r\n    }\r\n\r\n    //returns all provider functions\r\n    return (\r\n        <ChallengeContext.Provider value={{\r\n            challenges, ratings, getChallenges, getRatings, addChallenge, deleteChallenge, getChallengeById, updateChallenge\r\n        }}>\r\n            {props.children}\r\n        </ChallengeContext.Provider>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeCard.js",["112","113"],"C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\ChallengeForm.js",["114"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { GameContext } from \"../SearchPage/GamesProvider\"\r\nimport { ChallengeContext } from \"./ChallengeProvider\"\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\n\r\n//Renders the form for submitting challenges\r\nexport const ChallengeForm = () => {\r\n\r\n    const { addChallenge, getRatings } = useContext(ChallengeContext)\r\n\r\n    const { getGameById } = useContext(GameContext)\r\n\r\n    //sets the default state of the form\r\n    const [challenge, setChallenge] = useState({\r\n        id: 0,\r\n        userId: 0,\r\n        title: \"\",\r\n        ratingId: 0,\r\n        description: \"\"\r\n    })\r\n\r\n    //sets the default state of the game information needing to be saved, as well.\r\n    const [games, setGame] = useState({\r\n        gameId: 0,\r\n        game: \"\",\r\n    })\r\n\r\n    const [ratings, setRatings] = useState([])\r\n\r\n    const { gameId } = useParams()\r\n\r\n    //handles the state change when typing\r\n    const handleControlledInputChange = (event) => {\r\n        const newChallenge = { ...challenge }\r\n        newChallenge[event.target.name] = event.target.value\r\n        setChallenge(newChallenge)\r\n    }\r\n\r\n    //handles the saving and updating of challenges\r\n    const handleSaveChallenge = (button) => {\r\n        if (challenge.title === \"\" || challenge.ratingId === 0 || challenge.description === \"\") {\r\n            window.alert(\"Please fill in all fields.\")\r\n        } else {\r\n\r\n            addChallenge({\r\n                id: challenge.id,\r\n                userId: parseInt(sessionStorage.site_user),\r\n                gameId: parseInt(games.id),\r\n                game: games.name,\r\n                title: challenge.title,\r\n                ratingId: parseInt(challenge.ratingId),\r\n                description: challenge.description\r\n            })\r\n                .then(() => setChallenge,\r\n                    window.alert(\"Challenge saved, why not another?\"),\r\n                    challenge.title = \"\",\r\n                    challenge.ratingid = 0,\r\n                    challenge.description = \"\")\r\n        }\r\n    }\r\n\r\n    //fetches the currently viewed game and the list of ratings\r\n    useEffect(() => {\r\n        getGameById(gameId)\r\n            .then((response) => {\r\n                setGame(response)\r\n                return getRatings()\r\n                    .then(setRatings)\r\n            })\r\n    }, [])\r\n\r\n    //renders the form\r\n    return (\r\n        <form className=\"challengeForm\">\r\n            <h2 className=\"challengeForm__title\">Add Challenge</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"challengeTitle\">Title </label>\r\n                    <input type=\"text\" id=\"challengeTitle\" name=\"title\" required autoFocus className=\"form-control\" placeholder=\"Title\" onChange={handleControlledInputChange} value={challenge.title} />\r\n                </div>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"rating\">Difficulty </label>\r\n                    <select value={challenge.ratingId} name=\"ratingId\" id=\"challengeRating\" className=\"form-control\" onChange={handleControlledInputChange}>\r\n                        <option value=\"0\">Select a rating</option>\r\n                        {ratings?.map(l => (\r\n                            <option key={l.id} value={l.id}>\r\n                                {l.rank}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea name=\"description\" id=\"description\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Description\" value={challenge.description} />\r\n                </div>\r\n            </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={event => {\r\n                    event.preventDefault() // Prevent browser from submitting the form and refreshing the page\r\n                    handleSaveChallenge(document.querySelector(\".editBtn\")?.id)\r\n                }}\r\n            >\r\n                Add Challenge</button>\r\n        </form>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\Challenges\\SavedChallengeProvider.js",["115"],"import React, { useState, createContext } from \"react\"\r\n\r\nexport const SavedChallengeContext = createContext()\r\n\r\nexport const SavedChallengeProvider = (props) => {\r\n    const [savedChallenges, setSavedChallenges] = useState([])\r\n\r\n    //allows the saving of challenges to a single user\r\n    const saveChallenge = saveObj => {\r\n        return fetch(\"http://localhost:8088/savedChallenges\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(saveObj)\r\n        })\r\n            .then(getSavedChallenges)\r\n    }\r\n\r\n    //fetches all saved challenges\r\n    const getSavedChallenges = () => {\r\n        return fetch(\"http://localhost:8088/savedChallenges?_expand=user&_expand=challenge\")\r\n            .then(response => response.json())\r\n    }\r\n\r\n    //allows for the deleting of challenges from a user's saved challenges\r\n    const deleteSavedChallenge = (challengeId) => {\r\n        return fetch(`http://localhost:8088/savedChallenges/${challengeId}`, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(getSavedChallenges)\r\n    }\r\n\r\n    //returns all provider functions\r\n    return (\r\n        <SavedChallengeContext.Provider value={{\r\n            savedChallenges, saveChallenge, getSavedChallenges, deleteSavedChallenge\r\n        }}>\r\n            {props.children}\r\n        </SavedChallengeContext.Provider>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\UserPage\\UserPage.js",["116"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { SavedChallengeContext } from \"../Challenges/SavedChallengeProvider\"\r\nimport { SavedChallengeCard } from \"./SavedChallengeCard\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"./SavedChallenge.css\"\r\n\r\nexport const UserDetails = () => {\r\n\r\n    const { getSavedChallenges, deleteSavedChallenge } = useContext(SavedChallengeContext)\r\n\r\n    const [savedChallenges, setSavedChallenges] = useState([])\r\n\r\n    //fetches all saved challenges\r\n    useEffect(() => {\r\n        getSavedChallenges()\r\n            .then(setSavedChallenges)\r\n    }, [])\r\n\r\n    //handles the deleting of saved challenges for a single user\r\n    const handleSavedChallengeDelete = (savedObj) => {\r\n        deleteSavedChallenge(savedObj.id)\r\n        .then(getSavedChallenges)\r\n        .then(setSavedChallenges)\r\n    }\r\n\r\n    //renders each challenge\r\n    return (\r\n        <section className=\"SavedChallengeCard\">\r\n            <Link to={`/games`}>\r\n                View list of games!\r\n            </Link>\r\n            <h1 className=\"header\">Saved Challenges</h1>\r\n            {savedChallenges.map((item) => {\r\n                return <SavedChallengeCard key={item.id} challenge={item} deleteBtn={handleSavedChallengeDelete}/>\r\n            })}\r\n        </section>\r\n    )\r\n}","C:\\Users\\Joshua\\workspace\\bring-on-the-challenge-capstone\\src\\components\\UserPage\\SavedChallengeCard.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":16,"column":6,"nodeType":"129","endLine":16,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":7,"column":13,"nodeType":"133","endLine":7,"endColumn":83},{"ruleId":"123","severity":1,"message":"124","line":12,"column":10,"nodeType":"125","messageId":"126","endLine":12,"endColumn":14},{"ruleId":"127","severity":1,"message":"134","line":20,"column":6,"nodeType":"129","endLine":20,"endColumn":8,"suggestions":"135"},{"ruleId":"131","severity":1,"message":"132","line":13,"column":13,"nodeType":"133","endLine":13,"endColumn":83},{"ruleId":"127","severity":1,"message":"136","line":29,"column":8,"nodeType":"129","endLine":29,"endColumn":10,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":63,"column":17,"nodeType":"133","endLine":63,"endColumn":87},{"ruleId":"138","severity":1,"message":"139","line":42,"column":18,"nodeType":"140","messageId":"141","endLine":42,"endColumn":20},{"ruleId":"123","severity":1,"message":"142","line":7,"column":21,"nodeType":"125","messageId":"126","endLine":7,"endColumn":31},{"ruleId":"123","severity":1,"message":"143","line":8,"column":11,"nodeType":"125","messageId":"126","endLine":8,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":21,"column":9,"nodeType":"146","messageId":"147","endLine":30,"endColumn":10},{"ruleId":"127","severity":1,"message":"148","line":72,"column":8,"nodeType":"129","endLine":72,"endColumn":10,"suggestions":"149"},{"ruleId":"123","severity":1,"message":"150","line":6,"column":29,"nodeType":"125","messageId":"126","endLine":6,"endColumn":47},{"ruleId":"127","severity":1,"message":"151","line":17,"column":8,"nodeType":"129","endLine":17,"endColumn":10,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"no-unused-vars","'list' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGamesList'. Either include it or remove the dependency array.","ArrayExpression",["155"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'gameId', 'getChallenges', and 'getGameById'. Either include them or remove the dependency array.",["157"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setRatings' is assigned a value but never used.","'edit' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'gameId', 'getGameById', and 'getRatings'. Either include them or remove the dependency array.",["158"],"'setSavedChallenges' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSavedChallenges'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [getGamesList]",{"range":"170","text":"171"},"Update the dependencies array to be: [getGames]",{"range":"172","text":"173"},"Update the dependencies array to be: [gameId, getChallenges, getGameById]",{"range":"174","text":"175"},"Update the dependencies array to be: [gameId, getGameById, getRatings]",{"range":"176","text":"177"},"Update the dependencies array to be: [getSavedChallenges]",{"range":"178","text":"179"},[398,400],"[getGamesList]",[552,554],"[getGames]",[943,945],"[gameId, getChallenges, getGameById]",[2367,2369],"[gameId, getGameById, getRatings]",[608,610],"[getSavedChallenges]"]